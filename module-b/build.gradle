plugins {
    id 'java'
}

group 'be.cocom.dms'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

   // tests('be.cocom.dms:module-a')

    testImplementation("${project.group}:module-a:${project.version}") {
        capabilities {requireCapability('be.cocom.dms:module-a-tests')}
    }
   // testImplementation(':module-a').sourceSets.test.output // Don't work: Could not get unknown property 'sourceSets'
   // testImplementation(project(path: ':module-a', configuration: 'archives')); //  error: cannot find symbol String myClassBVariable = TestConstant.oneStaticSource
   // testImplementation(tests(project("module-a"))) // A problem occurred evaluating project ':module-b'. > Project with path 'module-a' could not be found in project ':module-b'.
    testImplementation project(path: ":module-a", configuration: 'tests')
}

def tests = sourceSets.test
java.registerFeature(tests.name) {
    usingSourceSet(tests)
}

def tests(Project project) {
    dependencies.create(project) {
        capabilities { requireCapability("$project.group:$project.name-test") }
    }
}
test {
    useJUnitPlatform()
}

/*
task testJar(type: Jar, dependsOn: testClasses) {
    archiveClassifier = 'test'
    from sourceSets.test.allSource
}
*/

def artifactsList = []
artifactsList = [jar, testJar]

artifacts {
    archives artifactsList
}